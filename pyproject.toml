[tool.poetry]
name = "dagstream"
version = "0.1.6"
description = ""
authors = ["sakamoto <sakamoto@ricos.co.jp>"]
license = "Apache-2.0"
classifiers = []
readme = "README.md"
homepage = "https://github.com/ricosjp/dagstream"
repository = "https://github.com/ricosjp/dagstream"
documentation = "https://ricosjp.github.io/dagstream/"
packages = [
    {include = "dagstream", from = "src"}
]
include = ["pyproject.toml"]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
pytest = "^5.2"
mypy = "^1.4.1"
pytest-cov = "^4.1.0"
sphinx-rtd-theme = "^1.2.2"
sphinxcontrib-mermaid = "^0.9.2"
mdformat = "^0.7.16"
ruff = "^0.9.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.isort]
profile = "black"


[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "@(abc\\.)?abstractmethod",
    "raise NotImplementedError"
    ]


[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "tests/**/*.py"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 80
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
]
ignore = ["ANN003", "ANN204"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"src/phlower/_base/**/*.py" = ["ANN401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
